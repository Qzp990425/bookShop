<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--
1、Mapper.xml文件中的namespace与mapper接口的类路径相同。
2、Mapper接口方法名和Mapper.xml中定义的每个statement的id相同
3、Mapper接口方法的输入参数类型和mapper.xml中定义的每个sql 的parameterType的类型相同
4、Mapper接口方法的输出参数类型和mapper.xml中定义的每个sql的resultType的类型相同
5、接口与xml文件必同名，而且在同一个路径下
-->

<mapper namespace="com.zj.dao.ShopCarMapper">
	
	<insert id="addBook" parameterType="com.zj.entity.ShopCar">
		insert into shopCar(uid,bid,number) values(#{uid},#{bid},#{number})
	</insert>
	
	<select id="getShopCar" parameterType="com.zj.entity.User" resultType="com.zj.entity.ShopCar">
		select * from shopCar where uid = #{uid}
	</select>
	
	<delete id="deleteShopCarBySid">
		delete from shopCar where sid = #{sid}
	</delete>
	
	<update id="updateNum" parameterType="com.zj.entity.ShopCar">
		update shopCar set number = #{number} where sid = #{sid}
	</update>
	
	<delete id="deleteShopCar" parameterType="int">
		delete from shopCar where 1 > 2 or sid in 
		<foreach collection="array" item="item" open="(" separator="," close=")">
			#{item}
		</foreach>
	</delete>
</mapper>